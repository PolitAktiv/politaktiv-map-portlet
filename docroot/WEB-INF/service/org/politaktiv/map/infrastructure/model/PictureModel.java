/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.politaktiv.map.infrastructure.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Picture service. Represents a row in the &quot;politaktivmap_Picture&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.politaktiv.map.infrastructure.model.impl.PictureModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.politaktiv.map.infrastructure.model.impl.PictureImpl}.
 * </p>
 *
 * @author eichi
 * @see Picture
 * @see org.politaktiv.map.infrastructure.model.impl.PictureImpl
 * @see org.politaktiv.map.infrastructure.model.impl.PictureModelImpl
 * @generated
 */
public interface PictureModel extends BaseModel<Picture> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a picture model instance should use the {@link Picture} interface instead.
	 */

	/**
	 * Returns the primary key of this picture.
	 *
	 * @return the primary key of this picture
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this picture.
	 *
	 * @param primaryKey the primary key of this picture
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the picture ID of this picture.
	 *
	 * @return the picture ID of this picture
	 */
	public long getPictureId();

	/**
	 * Sets the picture ID of this picture.
	 *
	 * @param pictureId the picture ID of this picture
	 */
	public void setPictureId(long pictureId);

	/**
	 * Returns the company ID of this picture.
	 *
	 * @return the company ID of this picture
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this picture.
	 *
	 * @param companyId the company ID of this picture
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this picture.
	 *
	 * @return the group ID of this picture
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this picture.
	 *
	 * @param groupId the group ID of this picture
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the user ID of this picture.
	 *
	 * @return the user ID of this picture
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this picture.
	 *
	 * @param userId the user ID of this picture
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this picture.
	 *
	 * @return the user uuid of this picture
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this picture.
	 *
	 * @param userUuid the user uuid of this picture
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the name of this picture.
	 *
	 * @return the name of this picture
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this picture.
	 *
	 * @param name the name of this picture
	 */
	public void setName(String name);

	/**
	 * Returns the description of this picture.
	 *
	 * @return the description of this picture
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this picture.
	 *
	 * @param description the description of this picture
	 */
	public void setDescription(String description);

	/**
	 * Returns the reference url of this picture.
	 *
	 * @return the reference url of this picture
	 */
	@AutoEscape
	public String getReferenceUrl();

	/**
	 * Sets the reference url of this picture.
	 *
	 * @param referenceUrl the reference url of this picture
	 */
	public void setReferenceUrl(String referenceUrl);

	/**
	 * Returns the background ID of this picture.
	 *
	 * @return the background ID of this picture
	 */
	public long getBackgroundId();

	/**
	 * Sets the background ID of this picture.
	 *
	 * @param backgroundId the background ID of this picture
	 */
	public void setBackgroundId(long backgroundId);

	/**
	 * Returns the rotation of this picture.
	 *
	 * @return the rotation of this picture
	 */
	public long getRotation();

	/**
	 * Sets the rotation of this picture.
	 *
	 * @param rotation the rotation of this picture
	 */
	public void setRotation(long rotation);

	/**
	 * Returns the width of this picture.
	 *
	 * @return the width of this picture
	 */
	public double getWidth();

	/**
	 * Sets the width of this picture.
	 *
	 * @param width the width of this picture
	 */
	public void setWidth(double width);

	/**
	 * Returns the height of this picture.
	 *
	 * @return the height of this picture
	 */
	public double getHeight();

	/**
	 * Sets the height of this picture.
	 *
	 * @param height the height of this picture
	 */
	public void setHeight(double height);

	/**
	 * Returns the resolution of this picture.
	 *
	 * @return the resolution of this picture
	 */
	public double getResolution();

	/**
	 * Sets the resolution of this picture.
	 *
	 * @param resolution the resolution of this picture
	 */
	public void setResolution(double resolution);

	/**
	 * Returns the ocupacy of this picture.
	 *
	 * @return the ocupacy of this picture
	 */
	public double getOcupacy();

	/**
	 * Sets the ocupacy of this picture.
	 *
	 * @param ocupacy the ocupacy of this picture
	 */
	public void setOcupacy(double ocupacy);

	/**
	 * Returns the longitude of this picture.
	 *
	 * @return the longitude of this picture
	 */
	public double getLongitude();

	/**
	 * Sets the longitude of this picture.
	 *
	 * @param longitude the longitude of this picture
	 */
	public void setLongitude(double longitude);

	/**
	 * Returns the latitude of this picture.
	 *
	 * @return the latitude of this picture
	 */
	public double getLatitude();

	/**
	 * Sets the latitude of this picture.
	 *
	 * @param latitude the latitude of this picture
	 */
	public void setLatitude(double latitude);

	/**
	 * Returns the file entry uuid of this picture.
	 *
	 * @return the file entry uuid of this picture
	 */
	@AutoEscape
	public String getFileEntryUuid();

	/**
	 * Sets the file entry uuid of this picture.
	 *
	 * @param fileEntryUuid the file entry uuid of this picture
	 */
	public void setFileEntryUuid(String fileEntryUuid);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Picture picture);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Picture> toCacheModel();

	@Override
	public Picture toEscapedModel();

	@Override
	public Picture toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}