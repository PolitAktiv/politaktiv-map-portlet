/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 *        
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.politaktiv.map.infrastructure.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the DbPoint service. Represents a row in the &quot;politaktivmap_DbPoint&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.politaktiv.map.infrastructure.model.impl.DbPointModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.politaktiv.map.infrastructure.model.impl.DbPointImpl}.
 * </p>
 *
 * @author eichi
 * @see DbPoint
 * @see org.politaktiv.map.infrastructure.model.impl.DbPointImpl
 * @see org.politaktiv.map.infrastructure.model.impl.DbPointModelImpl
 * @generated
 */
public interface DbPointModel extends BaseModel<DbPoint> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a db point model instance should use the {@link DbPoint} interface instead.
	 */

	/**
	 * Returns the primary key of this db point.
	 *
	 * @return the primary key of this db point
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this db point.
	 *
	 * @param primaryKey the primary key of this db point
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the point ID of this db point.
	 *
	 * @return the point ID of this db point
	 */
	public long getPointId();

	/**
	 * Sets the point ID of this db point.
	 *
	 * @param pointId the point ID of this db point
	 */
	public void setPointId(long pointId);

	/**
	 * Returns the longitude of this db point.
	 *
	 * @return the longitude of this db point
	 */
	public double getLongitude();

	/**
	 * Sets the longitude of this db point.
	 *
	 * @param longitude the longitude of this db point
	 */
	public void setLongitude(double longitude);

	/**
	 * Returns the latitude of this db point.
	 *
	 * @return the latitude of this db point
	 */
	public double getLatitude();

	/**
	 * Sets the latitude of this db point.
	 *
	 * @param latitude the latitude of this db point
	 */
	public void setLatitude(double latitude);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(DbPoint dbPoint);

	public int hashCode();

	public CacheModel<DbPoint> toCacheModel();

	public DbPoint toEscapedModel();

	public String toString();

	public String toXmlString();
}